if game.PlaceId == 5194554335 or 8362219967 then
    local Library = loadstring(game:HttpGet("https://raw.githubusercontent.com/xHeptc/Kavo-UI-Library/main/source.lua"))()
    local Window = Library.CreateLib("NTM | The Vampire Legacies GUI", "GrapeTheme")
     
    
 
    
    
    
    
    
    
                            
    local Main = Window:NewTab("Main Menu")
    local MainSection = Main:NewSection("The Shop")     
    
    
    MainSection:NewButton("Equip Blood Bags & Etc..", "", function()
        print("Clicked")
    game:GetService("Players").LocalPlayer.PlayerGui.dialogueGui:destroy()
    for i,v in pairs(workspace:GetDescendants()) do
			if v:IsA("ClickDetector") then
				fireclickdetector(v)
			end
end
    
    
         end)
    
    
    
    
    
    
    
    
    
    
    MainSection:NewButton("Equip Faction Items", "", function()
        print("Clicked")
        local args = {
            [1] = {
                [1] = game:GetService("Players").LocalPlayer.PlayerGui.dialogueGui.dialogueScript,
                [2] = "buyCandle",
                [3] = game:GetService("Players").LocalPlayer.PlayerGui.dialogueGui,
                [4] = 0;
            }
        }
        
        game:GetService("ReplicatedStorage").Events.guiSpecialEvent:FireServer(unpack(args))
        
        local args = {
            [1] = {
                [1] = game:GetService("Players").LocalPlayer.PlayerGui.dialogueGui.dialogueScript,
                [2] = "buyDagger",
                [3] = game:GetService("Players").LocalPlayer.PlayerGui.dialogueGui,
                [4] = 0;
            }
        }
        
        game:GetService("ReplicatedStorage").Events.guiSpecialEvent:FireServer(unpack(args))
        
        local args = {
            [1] = {
                [1] = game:GetService("Players").LocalPlayer.PlayerGui.dialogueGui.dialogueScript,
                [2] = "buyPotion",
                [3] = game:GetService("Players").LocalPlayer.PlayerGui.dialogueGui,
                [4] = 0;
            }
        }
        
        game:GetService("ReplicatedStorage").Events.guiSpecialEvent:FireServer(unpack(args))
        local args = {
            [1] = {
                ["Message"] = "NutTheMenace: I Hope You Enjoy The Faction Items ",
                ["Player"] = game:GetService("Players").LocalPlayer
            }
        }
        
        game:GetService("ReplicatedStorage").Events.CharacterSystems.SelfNotification:FireServer(unpack(args))
        end)
        
        
        MainSection:NewButton("Equip Blood Drink", "", function()
        print("Clicked")
            
        local args = {
                [1] = {
                    [1] = game:GetService("Players").LocalPlayer.PlayerGui.dialogueGui.dialogueScript,
                    [2] = "receiveBloodDrink",
                    [3] = game:GetService("Players").LocalPlayer.PlayerGui.dialogueGui,
                    [4] = 0;
                }
            }
            
            game:GetService("ReplicatedStorage").Events.guiSpecialEvent:FireServer(unpack(args))
            
        end)
     


        MainSection:NewButton("Equip White Oak Ash", "", function()
            print("Clicked")
            local args = {
                [1] = {
                    [1] = game:GetService("Players").LocalPlayer.PlayerGui.dialogueGui.dialogueScript,
                    [2] = "freeStake",
                    [3] = game:GetService("Players").LocalPlayer.PlayerGui.dialogueGui,
                    [4] = 0;
                }
            }
            
            game:GetService("ReplicatedStorage").Events.guiSpecialEvent:FireServer(unpack(args))
            
            local args = {
                [1] = {
                    [1] = game:GetService("Players").LocalPlayer.PlayerGui.dialogueGui.dialogueScript,
                    [2] = "freeStake",
                    [3] = game:GetService("Players").LocalPlayer.PlayerGui.dialogueGui,
                    [4] = 0;
                }
            }
            
            game:GetService("ReplicatedStorage").Events.guiSpecialEvent:FireServer(unpack(args))
            
            local args = {
                [1] = {
                    [1] = game:GetService("Players").LocalPlayer.PlayerGui.dialogueGui.dialogueScript,
                    [2] = "freeStake",
                    [3] = game:GetService("Players").LocalPlayer.PlayerGui.dialogueGui,
                    [4] = 0;
                }
            }
            
            game:GetService("ReplicatedStorage").Events.guiSpecialEvent:FireServer(unpack(args))
             
            local args = {
                [1] = {
                    [1] = game:GetService("Players").LocalPlayer.PlayerGui.dialogueGui.dialogueScript,
                    [2] = "receiveWhiteOakAsh",
                    [3] = game:GetService("Players").LocalPlayer.PlayerGui.dialogueGui,
                    [4] = 0;
                }
            }
            
            game:GetService("ReplicatedStorage").Events.guiSpecialEvent:FireServer(unpack(args))
            
        end)
        
        MainSection:NewButton("Equip Wood Stakes", "", function()
        print("Clicked")
            
        local args = {
                [1] = {
                    [1] = game:GetService("Players").LocalPlayer.PlayerGui.dialogueGui.dialogueScript,
                    [2] = "freeStake",
                    [3] = game:GetService("Players").LocalPlayer.PlayerGui.dialogueGui,
                    [4] = 0;
                }
            }
            
            game:GetService("ReplicatedStorage").Events.guiSpecialEvent:FireServer(unpack(args))
            
         end)


            MainSection:NewLabel("The Enhancements")
      
       
       
       MainSection:NewToggle("Magic-Rush (Must Hold Candle)", "ToggleInfo", function(state)
   if state then
   print("Toggle On")
   
   _G.Melee = true ---- make true into false to stop loop
    
   while _G.Melee == true do wait()
   
   game:GetService("Players").LocalPlayer.Character.Candle.Handle.signal:FireServer()
   end
       
   else
   print("Toggle Off")
   
   _G.Melee = false ---- make true into false to stop loop
   
   while _G.Melee == true do wait()
   
   game:GetService("Players").LocalPlayer.Character.Candle.Handle.signal:FireServer()
    
   end
   end
   end)
    
    
    MainSection:NewButton("Increase your Magic", "", function()
    print("Clicked")
    
    local args = {
        [1] = {
            [1] = game:GetService("Players").LocalPlayer.PlayerGui.dialogueGui.dialogueScript,
            [2] = "increaseMaxMagic",
            [3] = game:GetService("Players").LocalPlayer.PlayerGui.dialogueGui,
            [4] = 0;
        }
    }
    
    game:GetService("ReplicatedStorage").Events.guiSpecialEvent:FireServer(unpack(args))
    
    local args = {
        [1] = {
            [1] = game:GetService("Players").LocalPlayer.PlayerGui.dialogueGui.dialogueScript,
            [2] = "increaseMaxMagic",
            [3] = game:GetService("Players").LocalPlayer.PlayerGui.dialogueGui,
            [4] = 0;
        }
    }
    
    game:GetService("ReplicatedStorage").Events.guiSpecialEvent:FireServer(unpack(args))
    
    local args = {
        [1] = {
            [1] = game:GetService("Players").LocalPlayer.PlayerGui.dialogueGui.dialogueScript,
            [2] = "increaseMaxMagic",
            [3] = game:GetService("Players").LocalPlayer.PlayerGui.dialogueGui,
            [4] = 0;
        }
    }
    
    game:GetService("ReplicatedStorage").Events.guiSpecialEvent:FireServer(unpack(args))
    
    
    end) 
    
    MainSection:NewButton("Increase your Health", "", function()
        print("Clicked")
        local args = {
            [1] = {
                [1] = game:GetService("Players").LocalPlayer.PlayerGui.dialogueGui.dialogueScript,
                [2] = "increaseMaxHealth",
                [3] = game:GetService("Players").LocalPlayer.PlayerGui.dialogueGui,
                [4] = 0;
            }
        }
        
        game:GetService("ReplicatedStorage").Events.guiSpecialEvent:FireServer(unpack(args))
        
        local args = {
            [1] = {
                [1] = game:GetService("Players").LocalPlayer.PlayerGui.dialogueGui.dialogueScript,
                [2] = "increaseMaxHealth",
                [3] = game:GetService("Players").LocalPlayer.PlayerGui.dialogueGui,
                [4] = 0;
            }
        }
        
        game:GetService("ReplicatedStorage").Events.guiSpecialEvent:FireServer(unpack(args))
        
        local args = {
            [1] = {
                [1] = game:GetService("Players").LocalPlayer.PlayerGui.dialogueGui.dialogueScript,
                [2] = "increaseMaxHealth",
                [3] = game:GetService("Players").LocalPlayer.PlayerGui.dialogueGui,
                [4] = 0;
            }
        }
        
        game:GetService("ReplicatedStorage").Events.guiSpecialEvent:FireServer(unpack(args))
                        
        end) 
        
        
        MainSection:NewButton("Increase your Energy", "", function()
        print("Clicked")
        
        local args = {
            [1] = {
                [1] = game:GetService("Players").LocalPlayer.PlayerGui.dialogueGui.dialogueScript,
                [2] = "increaseMaxEnergy",
                [3] = game:GetService("Players").LocalPlayer.PlayerGui.dialogueGui,
                [4] = 0;
            }
        }
        
        game:GetService("ReplicatedStorage").Events.guiSpecialEvent:FireServer(unpack(args))
        
        local args = {
            [1] = {
                [1] = game:GetService("Players").LocalPlayer.PlayerGui.dialogueGui.dialogueScript,
                [2] = "increaseMaxEnergy",
                [3] = game:GetService("Players").LocalPlayer.PlayerGui.dialogueGui,
                [4] = 0;
            }
        }
        
        game:GetService("ReplicatedStorage").Events.guiSpecialEvent:FireServer(unpack(args))
        
        local args = {
            [1] = {
                [1] = game:GetService("Players").LocalPlayer.PlayerGui.dialogueGui.dialogueScript,
                [2] = "increaseMaxEnergy",
                [3] = game:GetService("Players").LocalPlayer.PlayerGui.dialogueGui,
                [4] = 0;
            }
        }
        
        game:GetService("ReplicatedStorage").Events.guiSpecialEvent:FireServer(unpack(args))
       
        
        end) 
        
    
    
    
    
    
    
    
    local Tab = Window:NewTab("Player Mod")
    local PlayerSection = Tab:NewSection("Modify Player")

      
      PlayerSection:NewTextBox(" Teleport to User ", "TextboxInfo", function(txt)
	print('Success')
        
    local username = string.lower(txt)
    local foundChild = false
    local Child
    for i,v in pairs(game.Players:GetChildren()) do
        if string.lower(v.Name) == username then
        foundChild = true
        child = v
    end
end

    
if foundChild == true then
    
    game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = child.Character.HumanoidRootPart.CFrame


    end



end)


    
    PlayerSection:NewButton("Change Species (Female) Best with Mortals", "", function()
        print("Clicked")
        local args = {[1] = {["EyeColor"] = "Brown",["Gender"] = "Female",["CharDisplayName"] = "Ntm's Menace"}}
        game:GetService("ReplicatedStorage").Events.SpawnAsCustom:FireServer(unpack(args))
     
    end)


    PlayerSection:NewButton("Change Species (Male) Best with Mortals", "", function()
        print("Clicked")
        local args = {[1] = {["EyeColor"] = "Brown",["Gender"] = "Male",["CharDisplayName"] = "Ntm's Menace"}}
        game:GetService("ReplicatedStorage").Events.SpawnAsCustom:FireServer(unpack(args))
     
    end)

    PlayerSection:NewButton("Become A Vampire (Universal)", "", function()
        print("Clicked")
    
    local args = {[1] = {["Transition"] = true,["Option"] = "revive",["Tribrid"] = true,["Resurrect"] = true,["Pos"] = CFrame.new(-251, 86, -100)}}
        game:GetService("ReplicatedStorage").Events.PlayerDeath:FireServer(unpack(args))
        
    end)
    
PlayerSection:NewButton("Become an OG", "", function()
        print("Clicked")
    
-- Script generated by Nut The Menace Spy - credits to Claudev0#8849

local args = {
    [1] = {
        [3] = game:GetService("Players").LocalPlayer.PlayerGui.dialogueGui,
        [2] = "turnMortal",
        [4] = 0,
        [1] = game:GetService("Players").LocalPlayer.PlayerGui.dialogueGui.dialogueScript
    }
}

game:GetService("ReplicatedStorage").Events.guiSpecialEvent:FireServer(unpack(args))

-- Script generated by Nut The Menace Spy - credits to Claudev0#8849

local args = {
    [1] = {
        [3] = game:GetService("Players").LocalPlayer.PlayerGui.dialogueGui,
        [2] = "receiveHouseReward",
        [4] = 0,
        [1] = game:GetService("Players").LocalPlayer.PlayerGui.dialogueGui.dialogueScript
    }
}

game:GetService("ReplicatedStorage").Events.guiSpecialEvent:FireServer(unpack(args))
   
    end)
    
    

    
    
    PlayerSection:NewLabel("Siphoner + Vamp = Heretic")
    
    PlayerSection:NewButton("Resurrect Yourself", "Resurrection", function()
        print("Clicked")
     
        local args = {
            [1] = {
                ["Resurrect"] = true,
                ["Option"] = "revive",
                ["IsCustom"] = false
            }
        }
        
        game:GetService("ReplicatedStorage").Events.PlayerDeath:FireServer(unpack(args))

    end)
    
    
    PlayerSection:NewToggle("Toggle Imortality", "ToggleInfo", function(state)
    if state then
    print("Toggle On")
     _G.Melee = true ---- make true into false to stop loop
    
   while _G.Melee == true do wait()
   
    local args = {[1] = {["Damage"] = -1000000}}
    game:GetService("ReplicatedStorage").Events.CharacterSystems.FallDamage:FireServer(unpack(args))
     end   
    else
     _G.Melee = false ---- make true into false to stop loop
    
   while _G.Melee == true do wait()
   
    local args = {[1] = {["Damage"] = -1000000}}
    game:GetService("ReplicatedStorage").Events.CharacterSystems.FallDamage:FireServer(unpack(args))
    
    end
     end 
    end)

    
    PlayerSection:NewButton("Hide Name", "Removes Group and your User", function()
        print("Clicked")
    
    game.Players.LocalPlayer.Character.Head.InfoGui.NameUser:destroy()
    game.Players.LocalPlayer.Character.Head.InfoGui.GroupRank:destroy()
    
    end)
    

    PlayerSection:NewButton("Exploit Invisible Mode", "", function()
    print("Clicked")
        
        game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(2053.36011, 1.15318537, 5.99627829, 0.326987326, -5.57066858e-11, -0.945028722, 2.42852796e-08, 1, 8.34394953e-09, 0.945028722, -2.56786521e-08, 0.326987326)
        wait(1)
        game.Players.LocalPlayer.Character.LowerTorso:destroy()
        wait(1,2)
        game.StarterGui:SetCore("SendNotification", { 
        Title = "Invisible Mode ON";
        Text = "Fly around with Admin if you fall out of map ";
        Icon = "rbxthumb://type=Asset&id=7770638479&w=150&h=150";
        Duration = "30";
        Button1 = "Enjoy :)";
    })
    game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-4.22500944, 85.3817291, -38.4750443, 0.949667633, -2.85709074e-08, 0.313259274, 8.66670202e-09, 1, 6.49315837e-08, -0.313259274, -5.89484976e-08, 0.949667633)
        
    end)
   
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    local Keybindsz = Window:NewTab("Combat")
    local KeybindszSection = Keybindsz:NewSection("Spells With Keybinds  (Keys on the right)")

    KeybindszSection:NewButton("Kill All", "", function()
        print("Clicked")
       local Plr = game.Players.LocalPlayer
            for i, Player in pairs (game.Players:GetPlayers()) do

                if Player.Character ~= nil and Player ~= Plr then
                    local mag = (Player.Character.UpperTorso.Position - Plr.Character.UpperTorso.Position).magnitude
                    if mag < 10000 then
                        local Target = Player.Character or Player.CharacterAdded:Wait()
         

    local args = {
        [1] = "TelekinesisEnd",
        [2] = {
            ["Target"] = Target.UpperTorso,
            ["Throw"] = true
        }
    }
    
    game:GetService("ReplicatedStorage").Events.CharacterSystems.Telekinesis:FireServer(unpack(args))
    

end
end
end


local Plr = game.Players.LocalPlayer
            for i, Player in pairs (game.Players:GetPlayers()) do

                if Player.Character ~= nil and Player ~= Plr then
                    local mag = (Player.Character.UpperTorso.Position - Plr.Character.UpperTorso.Position).magnitude
                    if mag < 1000 then
                        local Target = Player.Character or Player.CharacterAdded:Wait()
         

    local args = {
        [1] = "TelekinesisEnd",
        [2] = {
            ["Target"] = Target.UpperTorso,
            ["Throw"] = true
        }
    }
    
    game:GetService("ReplicatedStorage").Events.CharacterSystems.Telekinesis:FireServer(unpack(args))
    

end
end
end


local Plr = game.Players.LocalPlayer
            for i, Player in pairs (game.Players:GetPlayers()) do

                if Player.Character ~= nil and Player ~= Plr then
                    local mag = (Player.Character.UpperTorso.Position - Plr.Character.UpperTorso.Position).magnitude
                    if mag < 100 then
                        local Target = Player.Character or Player.CharacterAdded:Wait()
         

    local args = {
        [1] = "TelekinesisEnd",
        [2] = {
            ["Target"] = Target.UpperTorso,
            ["Throw"] = true
        }
    }
    
    game:GetService("ReplicatedStorage").Events.CharacterSystems.Telekinesis:FireServer(unpack(args))
    

end
end
end
     
        end)



    KeybindszSection:NewButton("Ascendo", " Levitation last for 80 seconds", function()
        print("Clicked")
       
        --- Ascendo
    local args = {
            [1] = {
                ["Message"] = "NutTheMenace: Ascendo is now Activated for 80 seconds ",
                ["Player"] = game:GetService("Players").LocalPlayer
            }
        }
        
    game:GetService("ReplicatedStorage").Events.CharacterSystems.SelfNotification:FireServer(unpack(args))
    
    local plr = game.Players.LocalPlayer
    local args = {[1] = "Ascendo",[2] = "Me"}
    local Event = game:GetService("ReplicatedStorage").DefaultChatSystemChatEvents.SayMessageRequest
    Event:FireServer(unpack(args))
    
    game.workspace[plr.name].Animate.idle.Animation1.AnimationId = "rbxassetid://6576163810"
    game.workspace[plr.name].Animate.idle.Animation2.AnimationId = "rbxassetid://6576163810"
    wait(1)
    game.workspace[plr.name].Animate.idle.Animation2.AnimationId = "rbxassetid://6540447504"
    game.workspace[plr.name].Animate.idle.Animation1.AnimationId = "rbxassetid://6540447504"
    game.workspace[plr.name].Animate.run.RunAnim.AnimationId = "rbxassetid://6540447504"
    game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = 50
    wait(80)
    game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = 16
    game.workspace[plr.name].Animate.run.RunAnim.AnimationId = "rbxassetid://5684397250"
    game.workspace[plr.name].Animate.idle.Animation1.AnimationId = "rbxassetid://5532734372"
    game.workspace[plr.name].Animate.idle.Animation2.AnimationId = "rbxassetid://5532734372"
        
        end)
    
    KeybindszSection:NewToggle("DJ's Teleport (Q)", "ToggleInfo", function(state)
        if state then
        print("Toggle On")
        clicktpon = true                    
        plr = game.Players.LocalPlayer
        hum = plr.Character.HumanoidRootPart
        mouse = plr:GetMouse()
        mouse.KeyDown:connect(function(key)
        if key == 'q' then
        if mouse.Target then
        if clicktpon then
        local args = {
            [1] = {
                ["Target"] = Vector3.new(mouse.Hit.x, mouse.Hit.y + 5, mouse.Hit.z)
            }
        }
        
        game:GetService("ReplicatedStorage").Events.CharacterSystems.DJTeleport:FireServer(unpack(args)) end
        end
        end
        end)
        else
        
            clicktpon = false                    
            plr = game.Players.LocalPlayer
            hum = plr.Character.HumanoidRootPart
            mouse = plr:GetMouse()
            mouse.KeyDown:connect(function(key)
            if key == 'q' then
            if mouse.Target then
            if clicktpon then
            local args = {
                [1] = {
                    ["Target"] = Vector3.new(mouse.Hit.x, mouse.Hit.y + 5, mouse.Hit.z)
                }
            }
            
            game:GetService("ReplicatedStorage").Events.CharacterSystems.DJTeleport:FireServer(unpack(args)) end
            end
            end
            end)
         end 
        end)
    
    
        KeybindszSection:NewToggle("Motus (M)", "ToggleInfo", function(state)
            if state then
            print("Toggle On")
            clicktpon = true                    
    plr = game.Players.LocalPlayer
    hum = plr.Character.HumanoidRootPart
    mouse = plr:GetMouse()
    mouse.KeyDown:connect(function(key)
    if key == 'm' then
    if mouse.Target then
    if clicktpon then
    local args = {
            [1] = {
                ["Incant"] = "motus",
                ["Tick"] = "u4()"
            }
        }
        
    game:GetService("ReplicatedStorage").RemoteEvents.WitchSpell:FireServer(unpack(args))
    end
    end
    end
    end)
    
       else
        
    clicktpon = false                    
    plr = game.Players.LocalPlayer
    hum = plr.Character.HumanoidRootPart
    mouse = plr:GetMouse()
    mouse.KeyDown:connect(function(key)
    if key == 'm' then
    if mouse.Target then
    if clicktpon then
    local args = {
            [1] = {
                ["Incant"] = "motus",
                ["Tick"] = "u4()"
            }
        }
        
    game:GetService("ReplicatedStorage").RemoteEvents.WitchSpell:FireServer(unpack(args))
    end
    end
    end
    end)
    end
            end)
    
    
    
    
            KeybindszSection:NewToggle("Invisique (I)", "ToggleInfo", function(state)
                if state then
                print("Toggle On")
                clicktpon = true                    
    plr = game.Players.LocalPlayer
    hum = plr.Character.HumanoidRootPart
    mouse = plr:GetMouse()
    mouse.KeyDown:connect(function(key)
    if key == 'i' then
    if mouse.Target then
    if clicktpon then
        local ohTable1 = {
            ["Incant"] = "invisique",
            ["Tick"] = "u4()"
        }
        
        game:GetService("ReplicatedStorage").RemoteEvents.WitchSpell:FireServer(ohTable1)
    
    end
    end
    end
    end)
    
       else
        
    clicktpon = false                    
    plr = game.Players.LocalPlayer
    hum = plr.Character.HumanoidRootPart
    mouse = plr:GetMouse()
    mouse.KeyDown:connect(function(key)
    if key == 'i' then
    if mouse.Target then
    if clicktpon then
        local ohTable1 = {
            ["Incant"] = "invisique",
            ["Tick"] = "u4()"
        }
        
        game:GetService("ReplicatedStorage").RemoteEvents.WitchSpell:FireServer(ohTable1)
        print('Invisique')
    
    end
    end
    end
    end)
    end
                end)
    
    
    
    
    
    
    
                KeybindszSection:NewToggle("Light Orb (L)", "ToggleInfo", function(state)
                    if state then
                    print("Toggle On")
    
                    clicktpon = true                    
    plr = game.Players.LocalPlayer
    hum = plr.Character.HumanoidRootPart
    mouse = plr:GetMouse()
    mouse.KeyDown:connect(function(key)
    if key == 'l' then
    if mouse.Target then
    if clicktpon then
        local ohTable1 = {
            ["Incant"] = "post tenebras spero lucem",
            ["Tick"] = "u4()"
        }
        
        game:GetService("ReplicatedStorage").RemoteEvents.WitchSpell:FireServer(ohTable1)
    
    end
    end
    end
    end)
    
       else
        
    clicktpon = false                    
    plr = game.Players.LocalPlayer
    hum = plr.Character.HumanoidRootPart
    mouse = plr:GetMouse()
    mouse.KeyDown:connect(function(key)
    if key == 'l' then
    if mouse.Target then
    if clicktpon then
        local ohTable1 = {
            ["Incant"] = "post tenebras spero lucem",
            ["Tick"] = "u4()"
        }
        
        game:GetService("ReplicatedStorage").RemoteEvents.WitchSpell:FireServer(ohTable1)
        print('Invisique')
    
    end
    end
    end
    end)
    end
                    
                    end)
    
    
    
    
    
                    KeybindszSection:NewToggle("Errox Femus  (T)", "ToggleInfo", function(state)
                        if state then
                        print("Toggle On")
        
                        if value then
        
                            _G.OFF = true
                        if _G.OFF == true then
                        
                             local function getPlayer()
                                    local userInput = game:GetService("UserInputService")
                                    local cam = workspace.CurrentCamera
                                    local mousePos = userInput:GetMouseLocation()
                                    local mouseRay = cam:ViewportPointToRay(mousePos.X, mousePos.Y)
                                    players = {}
                                    for _, x in next, game:GetService('Players'):GetPlayers() do
                                        players[#players + 1] = x.Character
                                    end
                                    local raycastParams = RaycastParams.new()
                                    raycastParams.FilterType = Enum.RaycastFilterType.Whitelist
                                    raycastParams.FilterDescendantsInstances = players
                                    raycastParams.IgnoreWater = true
                                    local raycastResult = workspace:Raycast(mouseRay.Origin, mouseRay.Direction * 1000, raycastParams)
                                    if raycastResult then
                                        for _, x in next, game:GetService('Players'):GetPlayers() do
                                            if not raycastResult.Instance:IsDescendantOf(x.Character) then
                                                continue 
                                            end
                                            return x
                                        end
                                    end
                                    return false
                                end
                                
                                local function Set(list)
                                    local set = {}
                                    for _, l in ipairs(list) do
                                        if l then
                                            set[l] = true
                                        end
                                    end
                                    return set
                                end
                                game.Players.LocalPlayer:GetMouse().KeyDown:Connect(function(key)
                                 if key == "t" then
                                local player = getPlayer()
                                 if player then
                                -- Script generated by Nut The Menace Spy - credits to Claudev0#8849
                            
                            local args = {
                                [1] = {
                                    ["Target"] = player.character,
                                    ["Incant"] = "errox femus",
                                    ["Tick"] = "u4()"
                                }
                            }
                            
                            game:GetService("ReplicatedStorage").RemoteEvents.WitchSpell:FireServer(unpack(args))
                            
                                end
                                end
                                end)   
                            end
                        
                           else
                               
                               
                            _G.OFF = false
                        
                        if _G.OFF == false then
                        
                        
                            local function getPlayer()
                                    local userInput = game:GetService("UserInputService")
                                    local cam = workspace.CurrentCamera
                                    local mousePos = userInput:GetMouseLocation()
                                    local mouseRay = cam:ViewportPointToRay(mousePos.X, mousePos.Y)
                                    players = {}
                                    for _, x in next, game:GetService('Players'):GetPlayers() do
                                        players[#players + 1] = x.Character
                                    end
                                    local raycastParams = RaycastParams.new()
                                    raycastParams.FilterType = Enum.RaycastFilterType.Whitelist
                                    raycastParams.FilterDescendantsInstances = players
                                    raycastParams.IgnoreWater = true
                                    local raycastResult = workspace:Raycast(mouseRay.Origin, mouseRay.Direction * 1000, raycastParams)
                                    if raycastResult then
                                        for _, x in next, game:GetService('Players'):GetPlayers() do
                                            if not raycastResult.Instance:IsDescendantOf(x.Character) then
                                                continue 
                                            end
                                            return x
                                        end
                                    end
                                    return false
                                end
                                
                                local function Set(list)
                                    local set = {}
                                    for _, l in ipairs(list) do
                                        if l then
                                            set[l] = false
                                        end
                                    end
                                    return set
                                end
                                game.Players.LocalPlayer:GetMouse().KeyDown:Connect(function(key)
                                 if key == "t" then
                                local player = getPlayer()
                                 if player then
                            
                            
                            local args = {
                                [1] = {
                                    ["Target"] = player.character,
                                    ["Incant"] = "errox femus",
                                    ["Tick"] = "u4()"
                                }
                            }
                            
                            game:GetService("ReplicatedStorage").RemoteEvents.WitchSpell:FireServer(unpack(args))
                            
                                end
                                end
                                end)
                        
                        end
                        end
                        end
                        end)
    
    
    
                        KeybindszSection:NewToggle("Incendia  (G)", "ToggleInfo", function(state)
                            if state then
                            print("Toggle On")
                            
                            
        _G.OFF = true
        if _G.OFF == true then
        
            local function getPlayer()
                local userInput = game:GetService("UserInputService")
                local cam = workspace.CurrentCamera
                local mousePos = userInput:GetMouseLocation()
                local mouseRay = cam:ViewportPointToRay(mousePos.X, mousePos.Y)
                players = {}
                for _, x in next, game:GetService('Players'):GetPlayers() do
                    players[#players + 1] = x.Character
                end
                local raycastParams = RaycastParams.new()
                raycastParams.FilterType = Enum.RaycastFilterType.Whitelist
                raycastParams.FilterDescendantsInstances = players
                raycastParams.IgnoreWater = true
                local raycastResult = workspace:Raycast(mouseRay.Origin, mouseRay.Direction * 1000, raycastParams)
                if raycastResult then
                    for _, x in next, game:GetService('Players'):GetPlayers() do
                        if not raycastResult.Instance:IsDescendantOf(x.Character) then
                            continue 
                        end
                        return x
                    end
                end
                return false
            end
            
            local function Set(list)
                local set = {}
                for _, l in ipairs(list) do
                    if l then
                        set[l] = true
                    end
                end
                return set
            end
            game.Players.LocalPlayer:GetMouse().KeyDown:Connect(function(key)
             if key == "g" then
            local player = getPlayer()
             if player then
            local args = {
                [1] = {
                    ["Incant"] = "incendia",
                    ["Target"] = player.character,
                    ["Tick"] = "u4()"
                }
            }
            game:GetService("ReplicatedStorage").RemoteEvents.WitchSpell:FireServer(unpack(args))
            end
            end
            end)
        end
        
        else
        
            _G.OFF = false
            if _G.OFF == false then
        
        
                local function getPlayer()
                    local userInput = game:GetService("UserInputService")
                    local cam = workspace.CurrentCamera
                    local mousePos = userInput:GetMouseLocation()
                    local mouseRay = cam:ViewportPointToRay(mousePos.X, mousePos.Y)
                    players = {}
                    for _, x in next, game:GetService('Players'):GetPlayers() do
                        players[#players + 1] = x.Character
                    end
                    local raycastParams = RaycastParams.new()
                    raycastParams.FilterType = Enum.RaycastFilterType.Whitelist
                    raycastParams.FilterDescendantsInstances = players
                    raycastParams.IgnoreWater = true
                    local raycastResult = workspace:Raycast(mouseRay.Origin, mouseRay.Direction * 1000, raycastParams)
                    if raycastResult then
                        for _, x in next, game:GetService('Players'):GetPlayers() do
                            if not raycastResult.Instance:IsDescendantOf(x.Character) then
                                continue 
                            end
                            return x
                        end
                    end
                    return false
                end
                
                local function Set(list)
                    local set = {}
                    for _, l in ipairs(list) do
                        if l then
                            set[l] = true
                        end
                    end
                    return set
                end
                game.Players.LocalPlayer:GetMouse().KeyDown:Connect(function(key)
                 if key == "g" then
                local player = getPlayer()
                 if player then
                local args = {
                    [1] = {
                        ["Incant"] = "incendia",
                        ["Target"] = player.character,
                        ["Tick"] = "u4()"
                    }
                }
                game:GetService("ReplicatedStorage").RemoteEvents.WitchSpell:FireServer(unpack(args))
                end
                end
                end)
            end
        end	
                            
                            
                            end)
    
    
    
            
                            KeybindszSection:NewToggle("Ad Somnum  (J)", "ToggleInfo", function(state)
                                if state then
                                print("Toggle On")
                                
                                _G.OFF = true
                                if _G.OFF == true then
                                
                                    local function getPlayer()
                                        local userInput = game:GetService("UserInputService")
                                        local cam = workspace.CurrentCamera
                                        local mousePos = userInput:GetMouseLocation()
                                        local mouseRay = cam:ViewportPointToRay(mousePos.X, mousePos.Y)
                                        players = {}
                                        for _, x in next, game:GetService('Players'):GetPlayers() do
                                            players[#players + 1] = x.Character
                                        end
                                        local raycastParams = RaycastParams.new()
                                        raycastParams.FilterType = Enum.RaycastFilterType.Whitelist
                                        raycastParams.FilterDescendantsInstances = players
                                        raycastParams.IgnoreWater = true
                                        local raycastResult = workspace:Raycast(mouseRay.Origin, mouseRay.Direction * 1000, raycastParams)
                                        if raycastResult then
                                            for _, x in next, game:GetService('Players'):GetPlayers() do
                                                if not raycastResult.Instance:IsDescendantOf(x.Character) then
                                                    continue 
                                                end
                                                return x
                                            end
                                        end
                                        return false
                                    end
                                    
                                    local function Set(list)
                                        local set = {}
                                        for _, l in ipairs(list) do
                                            if l then
                                                set[l] = true
                                            end
                                        end
                                        return set
                                    end
                                    game.Players.LocalPlayer:GetMouse().KeyDown:Connect(function(key)
                                     if key == "j" then
                                    local player = getPlayer()
                                     if player then
                                        local args = {
                                            [1] = {
                                                ["Incant"] = "ad somnum",
                                                ["Target"] = player.character,
                                                ["Tick"] = "u4()"
                                            }
                                        }
                                        game:GetService("ReplicatedStorage").RemoteEvents.WitchSpell:FireServer(unpack(args))
                                    end
                                    end
                                    end)
                                end
                                
                                else
                                
                                    _G.OFF = false
                                    if _G.OFF == false then
                                
                                
                                        local function getPlayer()
                                            local userInput = game:GetService("UserInputService")
                                            local cam = workspace.CurrentCamera
                                            local mousePos = userInput:GetMouseLocation()
                                            local mouseRay = cam:ViewportPointToRay(mousePos.X, mousePos.Y)
                                            players = {}
                                            for _, x in next, game:GetService('Players'):GetPlayers() do
                                                players[#players + 1] = x.Character
                                            end
                                            local raycastParams = RaycastParams.new()
                                            raycastParams.FilterType = Enum.RaycastFilterType.Whitelist
                                            raycastParams.FilterDescendantsInstances = players
                                            raycastParams.IgnoreWater = true
                                            local raycastResult = workspace:Raycast(mouseRay.Origin, mouseRay.Direction * 1000, raycastParams)
                                            if raycastResult then
                                                for _, x in next, game:GetService('Players'):GetPlayers() do
                                                    if not raycastResult.Instance:IsDescendantOf(x.Character) then
                                                        continue 
                                                    end
                                                    return x
                                                end
                                            end
                                            return false
                                        end
                                        
                                        local function Set(list)
                                            local set = {}
                                            for _, l in ipairs(list) do
                                                if l then
                                                    set[l] = true
                                                end
                                            end
                                            return set
                                        end
                                        game.Players.LocalPlayer:GetMouse().KeyDown:Connect(function(key)
                                         if key == "j" then
                                        local player = getPlayer()
                                         if player then
                                
                                            local args = {
                                                [1] = {
                                                    ["Incant"] = "ad somnum",
                                                    ["Target"] = player.character,
                                                    ["Tick"] = "u4()"
                                                }
                                            }
                                            game:GetService("ReplicatedStorage").RemoteEvents.WitchSpell:FireServer(unpack(args))
                                        
                                        end
                                        end
                                        end)
                                    end
                                
                                
                                
                                
                                end
                                
                                
                                end)
    
    
    
                                KeybindszSection:NewToggle("Poena Doloris  (P)", "ToggleInfo", function(state)
                                    if state then
                                    print("Toggle On")
                                    
                                    _G.OFF = true
                                    if _G.OFF == true then
                                    
                                        local function getPlayer()
                                            local userInput = game:GetService("UserInputService")
                                            local cam = workspace.CurrentCamera
                                            local mousePos = userInput:GetMouseLocation()
                                            local mouseRay = cam:ViewportPointToRay(mousePos.X, mousePos.Y)
                                            players = {}
                                            for _, x in next, game:GetService('Players'):GetPlayers() do
                                                players[#players + 1] = x.Character
                                            end
                                            local raycastParams = RaycastParams.new()
                                            raycastParams.FilterType = Enum.RaycastFilterType.Whitelist
                                            raycastParams.FilterDescendantsInstances = players
                                            raycastParams.IgnoreWater = true
                                            local raycastResult = workspace:Raycast(mouseRay.Origin, mouseRay.Direction * 1000, raycastParams)
                                            if raycastResult then
                                                for _, x in next, game:GetService('Players'):GetPlayers() do
                                                    if not raycastResult.Instance:IsDescendantOf(x.Character) then
                                                        continue 
                                                    end
                                                    return x
                                                end
                                            end
                                            return false
                                        end
                                        
                                        local function Set(list)
                                            local set = {}
                                            for _, l in ipairs(list) do
                                                if l then
                                                    set[l] = true
                                                end
                                            end
                                            return set
                                        end
                                        game.Players.LocalPlayer:GetMouse().KeyDown:Connect(function(key)
                                         if key == "p" then
                                        local player = getPlayer()
                                         if player then
                                            local args = {
                                                [1] = {
                                                    ["Incant"] = "poena doloris",
                                                    ["Target"] = player.character,
                                                    ["Tick"] = "u4()"
                                                }
                                            }
                                            game:GetService("ReplicatedStorage").RemoteEvents.WitchSpell:FireServer(unpack(args))
                                                
                                        
                                        end
                                        end
                                        end)
                                    end
                                    
                                    else
                                    
                                        _G.OFF = false
                                        if _G.OFF == false then
                                    
                                    
                                            local function getPlayer()
                                                local userInput = game:GetService("UserInputService")
                                                local cam = workspace.CurrentCamera
                                                local mousePos = userInput:GetMouseLocation()
                                                local mouseRay = cam:ViewportPointToRay(mousePos.X, mousePos.Y)
                                                players = {}
                                                for _, x in next, game:GetService('Players'):GetPlayers() do
                                                    players[#players + 1] = x.Character
                                                end
                                                local raycastParams = RaycastParams.new()
                                                raycastParams.FilterType = Enum.RaycastFilterType.Whitelist
                                                raycastParams.FilterDescendantsInstances = players
                                                raycastParams.IgnoreWater = true
                                                local raycastResult = workspace:Raycast(mouseRay.Origin, mouseRay.Direction * 1000, raycastParams)
                                                if raycastResult then
                                                    for _, x in next, game:GetService('Players'):GetPlayers() do
                                                        if not raycastResult.Instance:IsDescendantOf(x.Character) then
                                                            continue 
                                                        end
                                                        return x
                                                    end
                                                end
                                                return false
                                            end
                                            
                                            local function Set(list)
                                                local set = {}
                                                for _, l in ipairs(list) do
                                                    if l then
                                                        set[l] = true
                                                    end
                                                end
                                                return set
                                            end
                                            game.Players.LocalPlayer:GetMouse().KeyDown:Connect(function(key)
                                             if key == "p" then
                                            local player = getPlayer()
                                             if player then
                                            
                                                local args = {
                                                    [1] = {
                                                        ["Incant"] = "poena doloris",
                                                        ["Target"] = player.character,
                                                        ["Tick"] = "u4()"
                                                    }
                                                }
                                                game:GetService("ReplicatedStorage").RemoteEvents.WitchSpell:FireServer(unpack(args))
                                                
                                            end
                                            end
                                            end)
                                        end
                                    
                                    end
                                    
                                    
                                    end)
                                    
                                    
                                    KeybindszSection:NewToggle("Delfan  (E)  (only works with who can do it)", "ToggleInfo", function(state)
                                            if state then
                                            print("Toggle On")
                                            
                                            _G.OFF = true
                                            if _G.OFF == true then
                                            
                                                local function getPlayer()
                                                    local userInput = game:GetService("UserInputService")
                                                    local cam = workspace.CurrentCamera
                                                    local mousePos = userInput:GetMouseLocation()
                                                    local mouseRay = cam:ViewportPointToRay(mousePos.X, mousePos.Y)
                                                    players = {}
                                                    for _, x in next, game:GetService('Players'):GetPlayers() do
                                                        players[#players + 1] = x.Character
                                                    end
                                                    local raycastParams = RaycastParams.new()
                                                    raycastParams.FilterType = Enum.RaycastFilterType.Whitelist
                                                    raycastParams.FilterDescendantsInstances = players
                                                    raycastParams.IgnoreWater = true
                                                    local raycastResult = workspace:Raycast(mouseRay.Origin, mouseRay.Direction * 1000, raycastParams)
                                                    if raycastResult then
                                                        for _, x in next, game:GetService('Players'):GetPlayers() do
                                                            if not raycastResult.Instance:IsDescendantOf(x.Character) then
                                                                continue 
                                                            end
                                                            return x
                                                        end
                                                    end
                                                    return false
                                                end
                                                
                                                local function Set(list)
                                                    local set = {}
                                                    for _, l in ipairs(list) do
                                                        if l then
                                                            set[l] = true
                                                        end
                                                    end
                                                    return set
                                                end
                                                game.Players.LocalPlayer:GetMouse().KeyDown:Connect(function(key)
                                                 if key == "e" then
                                                local player = getPlayer()
                                                 if player then
                                                local args = {
                                                    [1] = {
                                                        ["Incant"] = "delfan eoten cor",
                                                        ["Target"] = player.character,
                                                        ["Tick"] = "u4()"
                                                    }
                                                }
                                                game:GetService("ReplicatedStorage").RemoteEvents.WitchSpell:FireServer(unpack(args))
                                                end
                                                end
                                                end)
                                            end
                                            
                                            else
                                            
                                                _G.OFF = false
                                                if _G.OFF == false then
                                            
                                                    local function getPlayer()
                                                        local userInput = game:GetService("UserInputService")
                                                        local cam = workspace.CurrentCamera
                                                        local mousePos = userInput:GetMouseLocation()
                                                        local mouseRay = cam:ViewportPointToRay(mousePos.X, mousePos.Y)
                                                        players = {}
                                                        for _, x in next, game:GetService('Players'):GetPlayers() do
                                                            players[#players + 1] = x.Character
                                                        end
                                                        local raycastParams = RaycastParams.new()
                                                        raycastParams.FilterType = Enum.RaycastFilterType.Whitelist
                                                        raycastParams.FilterDescendantsInstances = players
                                                        raycastParams.IgnoreWater = true
                                                        local raycastResult = workspace:Raycast(mouseRay.Origin, mouseRay.Direction * 1000, raycastParams)
                                                        if raycastResult then
                                                            for _, x in next, game:GetService('Players'):GetPlayers() do
                                                                if not raycastResult.Instance:IsDescendantOf(x.Character) then
                                                                    continue 
                                                                end
                                                                return x
                                                            end
                                                        end
                                                        return false
                                                    end
                                                    
                                                    local function Set(list)
                                                        local set = {}
                                                        for _, l in ipairs(list) do
                                                            if l then
                                                                set[l] = true
                                                            end
                                                        end
                                                        return set
                                                    end
                                                    game.Players.LocalPlayer:GetMouse().KeyDown:Connect(function(key)
                                                     if key == "e" then
                                                    local player = getPlayer()
                                                     if player then
                                                    local args = {
                                                        [1] = {
                                                            ["Incant"] = "delfan eoten cor",
                                                            ["Target"] = player.character,
                                                            ["Tick"] = "u4()"
                                                        }
                                                    }
                                                    game:GetService("ReplicatedStorage").RemoteEvents.WitchSpell:FireServer(unpack(args))
                                                    end
                                                    end
                                                    end)
                                            
                                                   
                                                end
                                            
                                            
                                            end
                                            
                                            
                                            end)
                                    
                                    
                                    
                                    
                                    
                                    
                                    
                                                                 
    
    
                                    KeybindszSection:NewToggle("Fire Prison  (N)", "ToggleInfo", function(state)
                                        if state then
                                        print("Toggle On")
                                        
                                        _G.OFF = true
                                        if _G.OFF == true then
                                        
                                            local function getPlayer()
                                                local userInput = game:GetService("UserInputService")
                                                local cam = workspace.CurrentCamera
                                                local mousePos = userInput:GetMouseLocation()
                                                local mouseRay = cam:ViewportPointToRay(mousePos.X, mousePos.Y)
                                                players = {}
                                                for _, x in next, game:GetService('Players'):GetPlayers() do
                                                    players[#players + 1] = x.Character
                                                end
                                                local raycastParams = RaycastParams.new()
                                                raycastParams.FilterType = Enum.RaycastFilterType.Whitelist
                                                raycastParams.FilterDescendantsInstances = players
                                                raycastParams.IgnoreWater = true
                                                local raycastResult = workspace:Raycast(mouseRay.Origin, mouseRay.Direction * 1000, raycastParams)
                                                if raycastResult then
                                                    for _, x in next, game:GetService('Players'):GetPlayers() do
                                                        if not raycastResult.Instance:IsDescendantOf(x.Character) then
                                                            continue 
                                                        end
                                                        return x
                                                    end
                                                end
                                                return false
                                            end
                                            
                                            local function Set(list)
                                                local set = {}
                                                for _, l in ipairs(list) do
                                                    if l then
                                                        set[l] = true
                                                    end
                                                end
                                                return set
                                            end
                                            game.Players.LocalPlayer:GetMouse().KeyDown:Connect(function(key)
                                             if key == "n" then
                                            local player = getPlayer()
                                             if player then
                                                local args = {
                                                    [1] = {
                                                        ["Incant"] = "phasmatos motus incendiamos",
                                                        ["Target"] = player.character,
                                                        ["Tick"] = "u4()"
                                                    }
                                                }
                                                game:GetService("ReplicatedStorage").RemoteEvents.WitchSpell:FireServer(unpack(args))
                                                    
                                            
                                            end
                                            end
                                            end)
                                        end
                                        
                                        else
                                        
                                            _G.OFF = false
                                            if _G.OFF == false then
                                        
                                        
                                                local function getPlayer()
                                                    local userInput = game:GetService("UserInputService")
                                                    local cam = workspace.CurrentCamera
                                                    local mousePos = userInput:GetMouseLocation()
                                                    local mouseRay = cam:ViewportPointToRay(mousePos.X, mousePos.Y)
                                                    players = {}
                                                    for _, x in next, game:GetService('Players'):GetPlayers() do
                                                        players[#players + 1] = x.Character
                                                    end
                                                    local raycastParams = RaycastParams.new()
                                                    raycastParams.FilterType = Enum.RaycastFilterType.Whitelist
                                                    raycastParams.FilterDescendantsInstances = players
                                                    raycastParams.IgnoreWater = true
                                                    local raycastResult = workspace:Raycast(mouseRay.Origin, mouseRay.Direction * 1000, raycastParams)
                                                    if raycastResult then
                                                        for _, x in next, game:GetService('Players'):GetPlayers() do
                                                            if not raycastResult.Instance:IsDescendantOf(x.Character) then
                                                                continue 
                                                            end
                                                            return x
                                                        end
                                                    end
                                                    return false
                                                end
                                                
                                                local function Set(list)
                                                    local set = {}
                                                    for _, l in ipairs(list) do
                                                        if l then
                                                            set[l] = true
                                                        end
                                                    end
                                                    return set
                                                end
                                                game.Players.LocalPlayer:GetMouse().KeyDown:Connect(function(key)
                                                 if key == "n" then
                                                local player = getPlayer()
                                                 if player then
                                                
                                                    local args = {
                                                        [1] = {
                                                            ["Incant"] = "phasmatos motus incendiamos",
                                                            ["Target"] = player.character,
                                                            ["Tick"] = "u4()"
                                                        }
                                                    }
                                                    game:GetService("ReplicatedStorage").RemoteEvents.WitchSpell:FireServer(unpack(args))
                                                    
                                                end
                                                end
                                                end)
                                            end
                                        
                                        
                                        end
                                        
                                        
                                        end)
    
    
    
                                        KeybindszSection:NewToggle("Ossox  (U)", "ToggleInfo", function(state)
                                            if state then
                                            print("Toggle On")
                                            
                                            _G.OFF = true
                                            if _G.OFF == true then
                                            
                                                local function getPlayer()
                                                    local userInput = game:GetService("UserInputService")
                                                    local cam = workspace.CurrentCamera
                                                    local mousePos = userInput:GetMouseLocation()
                                                    local mouseRay = cam:ViewportPointToRay(mousePos.X, mousePos.Y)
                                                    players = {}
                                                    for _, x in next, game:GetService('Players'):GetPlayers() do
                                                        players[#players + 1] = x.Character
                                                    end
                                                    local raycastParams = RaycastParams.new()
                                                    raycastParams.FilterType = Enum.RaycastFilterType.Whitelist
                                                    raycastParams.FilterDescendantsInstances = players
                                                    raycastParams.IgnoreWater = true
                                                    local raycastResult = workspace:Raycast(mouseRay.Origin, mouseRay.Direction * 1000, raycastParams)
                                                    if raycastResult then
                                                        for _, x in next, game:GetService('Players'):GetPlayers() do
                                                            if not raycastResult.Instance:IsDescendantOf(x.Character) then
                                                                continue 
                                                            end
                                                            return x
                                                        end
                                                    end
                                                    return false
                                                end
                                                
                                                local function Set(list)
                                                    local set = {}
                                                    for _, l in ipairs(list) do
                                                        if l then
                                                            set[l] = true
                                                        end
                                                    end
                                                    return set
                                                end
                                                game.Players.LocalPlayer:GetMouse().KeyDown:Connect(function(key)
                                                 if key == "u" then
                                                local player = getPlayer()
                                                 if player then
                                                local args = {
                                                    [1] = {
                                                        ["Incant"] = "ossox",
                                                        ["Target"] = player.character,
                                                        ["Tick"] = "u4()"
                                                    }
                                                }
                                                game:GetService("ReplicatedStorage").RemoteEvents.WitchSpell:FireServer(unpack(args))
                                                end
                                                end
                                                end)
                                            end
                                            
                                            else
                                            
                                                _G.OFF = false
                                                if _G.OFF == false then
                                            
                                                    local function getPlayer()
                                                        local userInput = game:GetService("UserInputService")
                                                        local cam = workspace.CurrentCamera
                                                        local mousePos = userInput:GetMouseLocation()
                                                        local mouseRay = cam:ViewportPointToRay(mousePos.X, mousePos.Y)
                                                        players = {}
                                                        for _, x in next, game:GetService('Players'):GetPlayers() do
                                                            players[#players + 1] = x.Character
                                                        end
                                                        local raycastParams = RaycastParams.new()
                                                        raycastParams.FilterType = Enum.RaycastFilterType.Whitelist
                                                        raycastParams.FilterDescendantsInstances = players
                                                        raycastParams.IgnoreWater = true
                                                        local raycastResult = workspace:Raycast(mouseRay.Origin, mouseRay.Direction * 1000, raycastParams)
                                                        if raycastResult then
                                                            for _, x in next, game:GetService('Players'):GetPlayers() do
                                                                if not raycastResult.Instance:IsDescendantOf(x.Character) then
                                                                    continue 
                                                                end
                                                                return x
                                                            end
                                                        end
                                                        return false
                                                    end
                                                    
                                                    local function Set(list)
                                                        local set = {}
                                                        for _, l in ipairs(list) do
                                                            if l then
                                                                set[l] = true
                                                            end
                                                        end
                                                        return set
                                                    end
                                                    game.Players.LocalPlayer:GetMouse().KeyDown:Connect(function(key)
                                                     if key == "u" then
                                                    local player = getPlayer()
                                                     if player then
                                                    local args = {
                                                        [1] = {
                                                            ["Incant"] = "ossox",
                                                            ["Target"] = player.character,
                                                            ["Tick"] = "u4()"
                                                        }
                                                    }
                                                    game:GetService("ReplicatedStorage").RemoteEvents.WitchSpell:FireServer(unpack(args))
                                                    end
                                                    end
                                                    end)
                                            
                                                   
                                                end
                                            
                                            
                                            end
                                            
                                            
                                            end)
    
    
    
    
    
                            
    
    
    
    
    KeybindszSection:NewToggle("Instant-Kill  (Y)", "ToggleInfo", function(state)
           if state then
    print("Toggle On")
                                                
  _G.OFF = true
          if _G.OFF == true then
                                                
        local function getPlayer()
            local userInput = game:GetService("UserInputService")
            local cam = workspace.CurrentCamera
            local mousePos = userInput:GetMouseLocation()
            local mouseRay = cam:ViewportPointToRay(mousePos.X, mousePos.Y)
            players = {}
            for _, x in next, game:GetService('Players'):GetPlayers() do
                players[#players + 1] = x.Character
            end
            local raycastParams = RaycastParams.new()
            raycastParams.FilterType = Enum.RaycastFilterType.Whitelist
            raycastParams.FilterDescendantsInstances = players
            raycastParams.IgnoreWater = true
            local raycastResult = workspace:Raycast(mouseRay.Origin, mouseRay.Direction * 1000, raycastParams)
            if raycastResult then
                for _, x in next, game:GetService('Players'):GetPlayers() do
                    if not raycastResult.Instance:IsDescendantOf(x.Character) then
                        continue 
                    end
                    return x
                end
            end
            return false
        end
        
        local function Set(list)
            local set = {}
            for _, l in ipairs(list) do
                if l then
                    set[l] = true
                end
            end
            return set
        end
        game.Players.LocalPlayer:GetMouse().KeyDown:Connect(function(key)
         if key == "y" then
        local player = getPlayer()
         if player then
        -- Script generated by Nut The Menace Spy - credits to Claudev0#8849
    
    local args = {
        [1] = "TelekinesisEnd",
        [2] = {
            ["Target"] = player.character.LowerTorso,
            ["Throw"] = true
        }
    }
    
    game:GetService("ReplicatedStorage").Events.CharacterSystems.Telekinesis:FireServer(unpack(args))
    local args = {
        [1] = "TelekinesisEnd",
        [2] = {
            ["Target"] = player.character.UpperTorso,
            ["Throw"] = true
        }
    }
    
    game:GetService("ReplicatedStorage").Events.CharacterSystems.Telekinesis:FireServer(unpack(args))
    
    
    
    
       end
       end
       end)
    end
else
    _G.OFF = false
    if _G.OFF == true then

        local function getPlayer()
            local userInput = game:GetService("UserInputService")
            local cam = workspace.CurrentCamera
            local mousePos = userInput:GetMouseLocation()
            local mouseRay = cam:ViewportPointToRay(mousePos.X, mousePos.Y)
            players = {}
            for _, x in next, game:GetService('Players'):GetPlayers() do
                players[#players + 1] = x.Character
            end
            local raycastParams = RaycastParams.new()
            raycastParams.FilterType = Enum.RaycastFilterType.Whitelist
            raycastParams.FilterDescendantsInstances = players
            raycastParams.IgnoreWater = true
            local raycastResult = workspace:Raycast(mouseRay.Origin, mouseRay.Direction * 1000, raycastParams)
            if raycastResult then
                for _, x in next, game:GetService('Players'):GetPlayers() do
                    if not raycastResult.Instance:IsDescendantOf(x.Character) then
                        continue 
                    end
                    return x
                end
            end
            return false
        end
        
        local function Set(list)
            local set = {}
            for _, l in ipairs(list) do
                if l then
                    set[l] = true
                end
            end
            return set
        end
        game.Players.LocalPlayer:GetMouse().KeyDown:Connect(function(key)
         if key == "y" then
        local player = getPlayer()
         if player then
        -- Script generated by Nut The Menace Spy - credits to Claudev0#8849
    
    local args = {
        [1] = "TelekinesisEnd",
        [2] = {
            ["Target"] = player.character.LowerTorso,
            ["Throw"] = true
        }
    }
    
    game:GetService("ReplicatedStorage").Events.CharacterSystems.Telekinesis:FireServer(unpack(args))
    local args = {
        [1] = "TelekinesisEnd",
        [2] = {
            ["Target"] = player.character.UpperTorso,
            ["Throw"] = true
        }
    }
    
    game:GetService("ReplicatedStorage").Events.CharacterSystems.Telekinesis:FireServer(unpack(args))
    
    
    
    
       end
       end
       end)

end
end     
end)
    
    
    
    
    
    
     
     
    
    

                      
      
    
    
    
    
    local Farm = Window:NewTab("Farm Coins")
    local FarmSection = Farm:NewSection("The Farm HUB")
   
   FarmSection:NewToggle("Auto Coin Farm", "ToggleInfo", function(state)
   if state then
   print("Toggle On")
   
   _G.Melee = true ---- make true into false to stop loop
   
   
   while _G.Melee == true do wait()
    local args = {
        [1] = {
            [1] = game:GetService("Players").LocalPlayer.PlayerGui.dialogueGui.dialogueScript,
            [2] = "smallCoinGift",
            [3] = game:GetService("Players").LocalPlayer.PlayerGui.dialogueGui,
            [4] = 0;
        }
    }
    
    game:GetService("ReplicatedStorage").Events.guiSpecialEvent:FireServer(unpack(args))
    local args = {
        [1] = {
            [1] = game:GetService("Players").LocalPlayer.PlayerGui.dialogueGui.dialogueScript,
            [2] = "receiveHouseReward",
            [3] = game:GetService("Players").LocalPlayer.PlayerGui.dialogueGui,
            [4] = 0;
        }
    }
    
    game:GetService("ReplicatedStorage").Events.guiSpecialEvent:FireServer(unpack(args))
    local args = {
        [1] = {
            [1] = game:GetService("Players").LocalPlayer.PlayerGui.dialogueGui.dialogueScript,
            [2] = "receiveHouseReward",
            [3] = game:GetService("Players").LocalPlayer.PlayerGui.dialogueGui,
            [4] = 0;
        }
    }
    
    game:GetService("ReplicatedStorage").Events.guiSpecialEvent:FireServer(unpack(args))
    local args = {
        [1] = {
            [1] = game:GetService("Players").LocalPlayer.PlayerGui.dialogueGui.dialogueScript,
            [2] = "receiveHouseReward",
            [3] = game:GetService("Players").LocalPlayer.PlayerGui.dialogueGui,
            [4] = 0;
        }
    }
    
    game:GetService("ReplicatedStorage").Events.guiSpecialEvent:FireServer(unpack(args))
    
   end
       
   else
   print("Toggle Off")
   
   _G.Melee = false ---- make true into false to stop loop
   
   
   while _G.Melee == true do wait()
   
    local args = {
        [1] = {
            [1] = game:GetService("Players").LocalPlayer.PlayerGui.dialogueGui.dialogueScript,
            [2] = "smallCoinGift",
            [3] = game:GetService("Players").LocalPlayer.PlayerGui.dialogueGui,
            [4] = 0;
        }
    }
    
    game:GetService("ReplicatedStorage").Events.guiSpecialEvent:FireServer(unpack(args))
    
    local args = {
        [1] = {
            [1] = game:GetService("Players").LocalPlayer.PlayerGui.dialogueGui.dialogueScript,
            [2] = "receiveHouseReward",
            [3] = game:GetService("Players").LocalPlayer.PlayerGui.dialogueGui,
            [4] = 0;
        }
    }
    
    game:GetService("ReplicatedStorage").Events.guiSpecialEvent:FireServer(unpack(args))
    local args = {
        [1] = {
            [1] = game:GetService("Players").LocalPlayer.PlayerGui.dialogueGui.dialogueScript,
            [2] = "receiveHouseReward",
            [3] = game:GetService("Players").LocalPlayer.PlayerGui.dialogueGui,
            [4] = 0;
        }
    }
    
    game:GetService("ReplicatedStorage").Events.guiSpecialEvent:FireServer(unpack(args))
    local args = {
        [1] = {
            [1] = game:GetService("Players").LocalPlayer.PlayerGui.dialogueGui.dialogueScript,
            [2] = "receiveHouseReward",
            [3] = game:GetService("Players").LocalPlayer.PlayerGui.dialogueGui,
            [4] = 0;
        }
    }
    
    game:GetService("ReplicatedStorage").Events.guiSpecialEvent:FireServer(unpack(args))
    
   end
   end
   end)
    
    
    
    FarmSection:NewButton("5K Coins ", "", function()
        print("Clicked")
        local args = {
        [1] = {
            [1] = game:GetService("Players").LocalPlayer.PlayerGui.dialogueGui.dialogueScript,
            [2] = "receiveHouseReward",
            [3] = game:GetService("Players").LocalPlayer.PlayerGui.dialogueGui,
            [4] = 0;
        }
    }
    
    game:GetService("ReplicatedStorage").Events.guiSpecialEvent:FireServer(unpack(args))
    
    local args = {
        [1] = {
            [1] = game:GetService("Players").LocalPlayer.PlayerGui.dialogueGui.dialogueScript,
            [2] = "receiveHouseReward",
            [3] = game:GetService("Players").LocalPlayer.PlayerGui.dialogueGui,
            [4] = 0;
        }
    }
    
    game:GetService("ReplicatedStorage").Events.guiSpecialEvent:FireServer(unpack(args))
    
    local args = {
        [1] = {
            [1] = game:GetService("Players").LocalPlayer.PlayerGui.dialogueGui.dialogueScript,
            [2] = "receiveHouseReward",
            [3] = game:GetService("Players").LocalPlayer.PlayerGui.dialogueGui,
            [4] = 0;
        }
    }
    
    game:GetService("ReplicatedStorage").Events.guiSpecialEvent:FireServer(unpack(args))
    
    local args = {
        [1] = {
            [1] = game:GetService("Players").LocalPlayer.PlayerGui.dialogueGui.dialogueScript,
            [2] = "receiveHouseReward",
            [3] = game:GetService("Players").LocalPlayer.PlayerGui.dialogueGui,
            [4] = 0;
        }
    }
    
    game:GetService("ReplicatedStorage").Events.guiSpecialEvent:FireServer(unpack(args))
    
    local args = {
        [1] = {
            [1] = game:GetService("Players").LocalPlayer.PlayerGui.dialogueGui.dialogueScript,
            [2] = "receiveHouseReward",
            [3] = game:GetService("Players").LocalPlayer.PlayerGui.dialogueGui,
            [4] = 0;
        }
    }
    
    game:GetService("ReplicatedStorage").Events.guiSpecialEvent:FireServer(unpack(args))
    
     
    end)
    
    FarmSection:NewButton("3K Coins ", "", function()
        print("Clicked")
        local args = {
        [1] = {
            [1] = game:GetService("Players").LocalPlayer.PlayerGui.dialogueGui.dialogueScript,
            [2] = "receiveHouseReward",
            [3] = game:GetService("Players").LocalPlayer.PlayerGui.dialogueGui,
            [4] = 0;
        }
    }
    
    game:GetService("ReplicatedStorage").Events.guiSpecialEvent:FireServer(unpack(args))
    
    local args = {
        [1] = {
            [1] = game:GetService("Players").LocalPlayer.PlayerGui.dialogueGui.dialogueScript,
            [2] = "receiveHouseReward",
            [3] = game:GetService("Players").LocalPlayer.PlayerGui.dialogueGui,
            [4] = 0;
        }
    }
    
    game:GetService("ReplicatedStorage").Events.guiSpecialEvent:FireServer(unpack(args))
    
    local args = {
        [1] = {
            [1] = game:GetService("Players").LocalPlayer.PlayerGui.dialogueGui.dialogueScript,
            [2] = "receiveHouseReward",
            [3] = game:GetService("Players").LocalPlayer.PlayerGui.dialogueGui,
            [4] = 0;
        }
    }
    
    game:GetService("ReplicatedStorage").Events.guiSpecialEvent:FireServer(unpack(args))
     
    end)
    
    
    FarmSection:NewButton("1K Coins ", "", function()
        print("Clicked")
        local args = {
        [1] = {
            [1] = game:GetService("Players").LocalPlayer.PlayerGui.dialogueGui.dialogueScript,
            [2] = "receiveHouseReward",
            [3] = game:GetService("Players").LocalPlayer.PlayerGui.dialogueGui,
            [4] = 0;
        }
    }
    
    game:GetService("ReplicatedStorage").Events.guiSpecialEvent:FireServer(unpack(args))
   
     
    end)
    
    
    local Mainn = Window:NewTab("Teleports")
    local MainnSection = Mainn:NewSection("Destination & Barriers")


     MainnSection:NewButton("Remove Boundaries #1", "go to Harvest", function()
        print("Clicked")
        while true do wait(0,5)
            game:GetService("Workspace").Buildings.StrixManor.StrixKillBrick:Destroy()
                    for i= 1,3 do
                        game:GetService("Workspace").Buildings.StrixManor["Strix Boundary"]:Destroy()
                    end
                    for e= 1,2 do
                        game:GetService("Workspace")["Strix Boundary"]:Destroy()
                    end
                    end
        end)

        MainnSection:NewButton("Remove Boundaries #2", "go to Harvest", function()
            print("Clicked")
            while true do wait(0,5)
                game:GetService("Workspace").SolarisKillBrick:Destroy()
                
                for i= 1,2 do
                   game:GetService("Workspace")["Silvercrest Boundary"]:Destroy()
               end
               game:GetService("Workspace").SilvercrestKillBrick:Destroy()
               end
               
            end)




                           MainnSection:NewLabel("Places")


     
    MainnSection:NewButton("Town Square", "go to Main Area", function()
    print("Clicked")
    
    --Main Area
    game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-4.22500944, 85.3817291, -38.4750443, 0.949667633, -2.85709074e-08, 0.313259274, 8.66670202e-09, 1, 6.49315837e-08, -0.313259274, -5.89484976e-08, 0.949667633)
    
    end)
    
    MainnSection:NewButton("Salvatore School", "go to Salvator", function()
    print("Clicked")
    
    game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(259.549805, 85.19487, -972.431702, -0.195971593, 1.54016462e-08, 0.980609596, 3.43840156e-08, 1, -8.83466367e-09, -0.980609596, 3.19859517e-08, -0.195971593)
    
    end)
    
    MainnSection:NewButton("Harvest Area", "go to Harvest", function()
    print("Clicked")
    
    game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-436.711945, 85.0141907, -380.574707, -0.131621614, 5.25101562e-09, 0.991300046, 2.61725885e-09, 1, -4.94958918e-09, -0.991300046, 1.94301597e-09, -0.131621614)
    
    end)

    MainnSection:NewButton("Thorns Hideout", "go to Thorn", function()
        print("Clicked")
        
        game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-464.953552, -170.370712, -308.230713, -0.120268367, -6.95533089e-08, -0.992741406, 4.60165168e-08, 1, -7.5636656e-08, 0.992741406, -5.47791998e-08, -0.120268367)
        
       end)

        MainnSection:NewButton("Strix House", "go to Harvest", function()
            print("Clicked")
            
            game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(171.784668, 88.8738251, -480.863495, 0.998628557, -1.65991505e-08, -0.052354414, 1.9668537e-08, 1, 5.8111862e-08, 0.052354414, -5.90619003e-08, 0.998628557)
    
            end)

    MainnSection:NewButton("Silvercast Place", "go to Herbs", function()
    print("Clicked")
        
    game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-445.620728, 39.8480911, -1213.4762, 0.877762556, 5.70192817e-08, 0.479095906, -3.39962121e-08, 1, -5.67291032e-08, -0.479095906, 3.35072379e-08, 0.877762556)
    
    end)
    
   
    
       
       
       
       
       
       
       
       
       
       
       
       
       
       
       
        
    local Admin = Window:NewTab("Admin")
    local AdminSection = Admin:NewSection("Admins")

    AdminSection:NewButton("Infinite Yield Admin", "Enjoy", function()
        print("Clicked")
    
        loadstring(game:HttpGet(('https://raw.githubusercontent.com/EdgeIY/infiniteyield/master/source'),true))()
        
    end)
    
    
    
    
    
    
    
     local Chat = Window:NewTab("Chat Bypass")
     local ChatSection = Chat:NewSection("Pre-Made Chat Words & Emojis")
     
     ChatSection:NewButton("Laughing Emoji", "Say how you really feel", function(currentOption)
        print(currentOption)
        --- Laugh Emoji
        local args = {
        [1] = "\240\159\152\130\240\159\152\130\240\159\152\130",
        [2] = "All"
    }
    
    game:GetService("ReplicatedStorage").DefaultChatSystemChatEvents.SayMessageRequest:FireServer(unpack(args))
    end)
    
    
    
    
    
    ChatSection:NewButton("Yawning Emoji", "Say how you really feel", function(currentOption)
        print(currentOption)
        --- Yawning Emoji
    
    local args = {
        [1] = "\240\159\165\177\240\159\165\177\240\159\165\177",
        [2] = "All"
    }
    
    game:GetService("ReplicatedStorage").DefaultChatSystemChatEvents.SayMessageRequest:FireServer(unpack(args))
    
    
    end)
    
    ChatSection:NewButton("Nails Emoji", "Say how you really feel", function(currentOption)
        print(currentOption)
        -- Nails Emoji
    local args = {
        [1] = "\240\159\146\133\240\159\143\189\240\159\146\133\240\159\143\189\240\159\146\133\240\159\143\189",
        [2] = "All"
    }
    
    game:GetService("ReplicatedStorage").DefaultChatSystemChatEvents.SayMessageRequest:FireServer(unpack(args))
    end)
    
    
    ChatSection:NewButton("Clown Emoji", "Say how you really feel", function(currentOption)
        print(currentOption)
        --- Clown Emoji
    
    -- Script generated by Nut The Menace Spy - credits to Claudev0#8849
    
    local args = {
        [1] = "\240\159\164\161\240\159\164\161\240\159\164\161",
        [2] = "All"
    }
    
    game:GetService("ReplicatedStorage").DefaultChatSystemChatEvents.SayMessageRequest:FireServer(unpack(args))
    
    
    
    end)
     
     
     
     
     
                   ChatSection:NewLabel("Words")
                   
      ChatSection:NewButton("Fuck", "Say how you really feel", function(currentOption)
        print(currentOption)
        
        --- Fuck
        local args = {
        [1] = "ff\240\144\140\145\240\144\140\145\240\144\140\145u\240\144\140\145\240\144\140\145\240\144\140\145c" ..
            "\240\144\140\145\240\144\140\145\240\144\140\145k ",
        [2] = "All"
    }
    
    game:GetService("ReplicatedStorage").DefaultChatSystemChatEvents.SayMessageRequest:FireServer(unpack(args))
    
    end)
    
    
    
        ChatSection:NewButton("Faggot", "Say how you really feel", function(currentOption)
        print(currentOption)
        --- Faggot
        local args = {
        [1] = "ff \240\144\140\145 \205\156 \205\163 agg \240\144\140\145 \205\156 \205\163 ot ",
        [2] = "All"
    }
    
    game:GetService("ReplicatedStorage").DefaultChatSystemChatEvents.SayMessageRequest:FireServer(unpack(args))
    
    end)
    
      ChatSection:NewButton("Queer", "Say how you really feel", function(currentOption)
        print(currentOption)
        --- Queer
        local args = {
        [1] = " Qu \240\144\140\145 \205\156 \205\163 ee  \240\144\140\145 \205\156 \205\163 r ",
        [2] = "All"
    }
    
    game:GetService("ReplicatedStorage").DefaultChatSystemChatEvents.SayMessageRequest:FireServer(unpack(args))
    
    end)
    
    
    
       ChatSection:NewButton("Shit", "Say how you really feel", function(currentOption)
        print(currentOption)
        
        --- Shit 
        local args = {
        [1] = " Sh \240\144\140\145 \205\156 \205\163 it ",
        [2] = "All"
    }
    
    game:GetService("ReplicatedStorage").DefaultChatSystemChatEvents.SayMessageRequest:FireServer(unpack(args))
    
    end)
    
    
           ChatSection:NewButton("Cunt", "Say how you really feel", function(currentOption)
           print(currentOption)
    
        --- Cunt
        local args = {
        [1] = "c \240\144\140\145 \205\156 \205\163 unt ",
        [2] = "All"
    }
    
    game:GetService("ReplicatedStorage").DefaultChatSystemChatEvents.SayMessageRequest:FireServer(unpack(args))
    
    end)
    
    
    
    ChatSection:NewButton("Bitch", "Say how you really feel", function(currentOption)
           print(currentOption)
         
        --- Bitch
        local args = {
        [1] = " Bi \240\144\140\145 \205\156 \205\163 tc  \240\144\140\145 \205\156 \205\163 h ",
        [2] = "All"
    }
    
    game:GetService("ReplicatedStorage").DefaultChatSystemChatEvents.SayMessageRequest:FireServer(unpack(args))
       
    end)
    
    
    
    
    ChatSection:NewButton("Fuck You", "Say how you really feel", function(currentOption)
           print(currentOption)
    
        --- Fuck You
        local args = {
        [1] = "ff\240\144\140\145\240\144\140\145\240\144\140\145u\240\144\140\145\240\144\140\145\240\144\140\145c" ..
            "\240\144\140\145\240\144\140\145\240\144\140\145k  Yo  \240\144\140\145 \205\156 \205\163" ..
            " u ",
        [2] = "All"
    }
    
    game:GetService("ReplicatedStorage").DefaultChatSystemChatEvents.SayMessageRequest:FireServer(unpack(args))
    
    end)
    
    
    ChatSection:NewButton("Nigger", "Say how you really feel", function(currentOption)
           print(currentOption)
       
        --- Nigger
        local args = {
        [1] = "ni \240\144\140\145 \205\156 \205\163 gge \240\144\140\145 \205\156 \205\163 r ",
        [2] = "All"
    }
    
    game:GetService("ReplicatedStorage").DefaultChatSystemChatEvents.SayMessageRequest:FireServer(unpack(args))
    
    end)
    
    
    
    ChatSection:NewButton("Piss", "Say how you really feel", function(currentOption)
           print(currentOption)
    
        --- Piss
        local args = {
        [1] = " Pi \240\144\140\145 \205\156 \205\163 ss ",
        [2] = "All"
    }
    
    game:GetService("ReplicatedStorage").DefaultChatSystemChatEvents.SayMessageRequest:FireServer(unpack(args))
    
    end)
    
    
    
    ChatSection:NewButton("Boobs", "Say how you really feel", function(currentOption)
           print(currentOption)
    
         --- Boobs
        local args = {
        [1] = " Bo \240\144\140\145 \205\156 \205\163 ob  \240\144\140\145 \205\156 \205\163 s ",
        [2] = "All"
    }
    
    game:GetService("ReplicatedStorage").DefaultChatSystemChatEvents.SayMessageRequest:FireServer(unpack(args))
    
    end)
    
    
    
    ChatSection:NewButton("Gay Niggers", "Say how you really feel", function(currentOption)
           print(currentOption)
    
        --- Gay Niggers 
        local args = {
        [1] = " Ga  \240\144\140\145 \205\156 \205\163 y n \240\144\140\145 \205\156 \205\163 igg \240\144\140\145 " ..
            "\205\156 \205\163 ers ",
        [2] = "All"
    }
    
    game:GetService("ReplicatedStorage").DefaultChatSystemChatEvents.SayMessageRequest:FireServer(unpack(args))
    
    end)
    
    
    ChatSection:NewButton("Tits", "Say how you really feel", function(currentOption)
           print(currentOption)
       
        --- Tits 
        local args = {
        [1] = " Ti \240\144\140\145 \205\156 \205\163 ts ",
        [2] = "All"
    }
    
    game:GetService("ReplicatedStorage").DefaultChatSystemChatEvents.SayMessageRequest:FireServer(unpack(args))
       
    end)
    
    
    
    
    ChatSection:NewButton("Dick", "Say how you really feel", function(currentOption)
           print(currentOption)
           
       ---Dick
         local args = {
        [1] = " Di \240\144\140\145 \205\156 \205\163 ck ",
        [2] = "All"
    }
    
    game:GetService("ReplicatedStorage").DefaultChatSystemChatEvents.SayMessageRequest:FireServer(unpack(args))
    
    end)
    
    
    
    ChatSection:NewButton("Slut", "Say how you really feel", function(currentOption)
           print(currentOption)
           
    -- Slut
    
    local args = {
        [1] = " Sl \240\144\140\145 \205\156 \205\163 ut ",
        [2] = "All"
    }
    
    game:GetService("ReplicatedStorage").DefaultChatSystemChatEvents.SayMessageRequest:FireServer(unpack(args))
    
       
    end)
    
    
    
    ChatSection:NewButton("Hoe", "Say how you really feel", function(currentOption)
           print(currentOption)
           
      -- Hoe
    
    local args = {
        [1] = " Ho  \240\144\140\145 \205\156 \205\163 e ",
        [2] = "All"
    }
    
    game:GetService("ReplicatedStorage").DefaultChatSystemChatEvents.SayMessageRequest:FireServer(unpack(args))
    
    end)
    
    
    
    
    ChatSection:NewButton("Titties", "Say how you really feel", function(currentOption)
           print(currentOption)
          
     -- Titties
    
    local args = {
        [1] = " Ti \240\144\140\145 \205\156 \205\163 tt \240\144\140\145 \205\156 \205\163 ie  \240\144\140\145 \205" ..
            "\156 \205\163 s ",
        [2] = "All"
    }
    
    game:GetService("ReplicatedStorage").DefaultChatSystemChatEvents.SayMessageRequest:FireServer(unpack(args))
    
      
    end)
    
    
    ChatSection:NewButton("Clit", "Say how you really feel", function(currentOption)
           print(currentOption)
        
      --Clit
    
    local args = {
        [1] = " Cl \240\144\140\145 \205\156 \205\163 it ",
        [2] = "All"
    }
    
    game:GetService("ReplicatedStorage").DefaultChatSystemChatEvents.SayMessageRequest:FireServer(unpack(args))
    
    end)
                 
                   
                   
                   
                   
                   
                   
                   
                   
     
     
        
        
     local Miscc = Window:NewTab("Server")
     local MisccSection = Miscc:NewSection("The Misc settings HUB")
     

    MisccSection:NewDropdown("JOIN NEW SERVER", "take you to another server", {"View Server List"}, function(s)
     loadstring(game:HttpGet("https://www.scriptblox.com/raw/Server-Browser_80", true))();
    end)   

    

    
        
        
     local Credits = Window:NewTab("Credits")
     local CreditsSection = Credits:NewSection("~~ Credits ~~")
     CreditsSection:NewLabel("Created by Nut The Menace")
     CreditsSection:NewLabel("Discord: Claudev0#8849")
     CreditsSection:NewLabel("Discord Server: discord.gg/NTMS")
     CreditsSection:NewLabel("Twitter: @DatExploiter")
     
     
     CreditsSection:NewLabel("Credits to zont#9999")
     CreditsSection:NewLabel("Thank you for helping")
     CreditsSection:NewLabel("Allowing new stuff to be added :)")
     
     CreditsSection:NewLabel("Credits to danni#2222 on the Resurrection")
    
    CreditsSection:NewLabel("Shouout to all the Servers Boosters <3 You All")
    CreditsSection:NewLabel("HUGE THANKS TO ALL MY MODS & TESTERS <3")
    
    
    
    local Creditsss = Window:NewTab("P-Notes & Settings")
    local CreditsssSection = Creditsss:NewSection(" NEW NEW NEW!!")
    CreditsssSection:NewLabel("LATEST VERSION INSTALLED")
    CreditsssSection:NewLabel("Version 3.0")
    CreditsssSection:NewLabel("ALL NEW REVAMP WITH NEW FEATURE")
    CreditsssSection:NewLabel("ENJOY NEW STUFF WILL BE ADDED LATER")
    CreditsssSection:NewLabel("")
    
    CreditsssSection:NewKeybind("Toggle GUI", "", Enum.KeyCode.RightControl, function()
        Library:ToggleUI()
    end)
    
    
     
    end

    game.StarterGui:SetCore("SendNotification", { 
        Title = "Nut The Menace <3";
        Text = "The Vampire Legacies GUI                       ~~~~ Now Active ~~~~";
        Icon = "rbxthumb://type=Asset&id=7770638479&w=150&h=150";
        Duration = "30";
        Button1 = "Enjoy :)";
    })

        _G.Melee = true ---- make true into false to stop loop
    
        game:GetService("StarterGui"):SetCore("SendNotification", {Title = "Auto Server Hop is Now Active";Text = "Made by Claudev0#8849"})
        while _G.Melee == true do wait()
      
            local Player = game.Players.LocalPlayer
            if game:GetService("Players"):FindFirstChild("aarticaa") or game:GetService("Players"):FindFirstChild("DeceptiveInsidious") or game:GetService("Players"):FindFirstChild("p9xtn") or game:GetService("Players"):FindFirstChild("kaevena") or game:GetService("Players"):FindFirstChild("Injectedfangs") or game:GetService("Players"):FindFirstChild("LolaGlossi") or game:GetService("Players"):FindFirstChild("kvauIs") or game:GetService("Players"):FindFirstChild("pvtrova") or game:GetService("Players"):FindFirstChild("AlexYoung204") or game:GetService("Players"):FindFirstChild("maverouz") or game:GetService("Players"):FindFirstChild("EmeraIdaa") or game:GetService("Players"):FindFirstChild("niqvlas") or game:GetService("Players"):FindFirstChild("veurosia") or game:GetService("Players"):FindFirstChild("kefzef") or game:GetService("Players"):FindFirstChild("dvzqaa") or game:GetService("Players"):FindFirstChild("KIyricaI") or game:GetService("Players"):FindFirstChild("LuxeCoture") or game:GetService("Players"):FindFirstChild("Teletubbieshoi") or game:GetService("Players"):FindFirstChild("snowbeaxr") or game:GetService("Players"):FindFirstChild("Zureilia") or game:GetService("Players"):FindFirstChild("Emchikuwu") or game:GetService("Players"):FindFirstChild("delcourtria") or game:GetService("Players"):FindFirstChild("Crimsoux") or game:GetService("Players"):FindFirstChild("joshvuax") or game:GetService("Players"):FindFirstChild("Galiaeria") or game:GetService("Players"):FindFirstChild("Verdaunts") or game:GetService("Players"):FindFirstChild("LadyDavina") or game:GetService("Players"):FindFirstChild("DataSigh") or game:GetService("Players"):FindFirstChild("GospodinDeveloper") or game:GetService("Players"):FindFirstChild("m0onhead") then
                loadstring(game:HttpGet(('https://raw.githubusercontent.com/TheAdminUKnow/NutTheMenace/main/joinanotherserver'),true))()
            print('Running')

        end
        end
